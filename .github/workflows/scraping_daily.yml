name: Daily Selenium Scraping

on:
  schedule:
    - cron: '30 10 * * *'
  workflow_dispatch:  # Permite ejecutar manualmente el flujo si es necesario

jobs:
  scraping:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Clonar el código del repositorio
    - name: Checkout repository
      uses: actions/checkout@v2

    # Paso 2: Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # Paso 3: Instalar dependencias necesarias para Selenium y otros módulos
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Paso 4: Ejecutar el script de scraping con el archivo test.csv
    - name: Run Selenium scraper with test CSV
      run: python inpres_sismos/inpres_sismos/selenium/actualizar_sismos.py


    # Paso 5: Agregar los cambios del CSV
    - name: Add changes to git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add data/sismos.csv
        git commit -m "Actualizar sismos.csv"

    # Paso 6: Hacer push de los cambios al repositorio
    - name: Push changes to repository
      run: |
        git push https://github.com/${{ github.repository }} HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Paso 7: Ejecutar el script para actualizar la base de datos con los datos más recientes del CSV
    - name: Update SQLite database with new data
      run: |
        python inpres_sismos/inpres_sismos/db_scripts/actualizar_database.py

    # Paso 8: Commit y Push de la base de datos actualizada
    - name: Commit and push updated database
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add data/sismos.db  # Agregar la base de datos actualizada
        git commit -m "Actualizar base de datos SQLite con nuevos sismos"
        git push https://github.com/${{ github.repository }} HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}